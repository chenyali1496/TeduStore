package cn.tedu.store.filter;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
/*
 * HTML访问过滤器
 */
public class HtmlAccessFilter implements Filter {
	/**
	 * 白名单，允许直接访问的页面列表
	 */
	List<String> whiteList=new ArrayList<String>();
	public void init(FilterConfig arg0) throws ServletException {
		//确定白名单
		//**注意：如果html页面的顶部和底部采用iframe引入，则也需要加入到白名单中
		whiteList.add("register.html");
		whiteList.add("login.html");
		whiteList.add("index.html");
		whiteList.add("product_details.html");
	
		//输出
		System.out.println("无需登录的页面列表");
		for(String page:whiteList) {
			System.out.println(page);
		}
	}

	public void doFilter(
			ServletRequest arg0, ServletResponse arg1, FilterChain filterChain)
					throws IOException, ServletException {
		//获取当前页面
		HttpServletRequest request=(HttpServletRequest) arg0;
		String uri=request.getRequestURI();
		//System.out.println("当前请求："+uri);
		int beginIndex=uri.lastIndexOf("/")+1;
		String fileName=uri.substring(beginIndex);
		System.out.println("当前请求页面："+fileName);
		
		//判断当前访问的是那个页面
		if(whiteList.contains(fileName)) {
			//如果是无需登录的页面，直接放行，例如：login.html
			System.out.println("无需登录,直接放行");
			filterChain.doFilter(arg0, arg1);
			return;
		}
		//如果是需要登录的页面，判断session,决定放行
		HttpSession session=request.getSession();
		if(session.getAttribute("id")!=null) {
			//Session中有id，表示已经登录，直接放行
			System.out.println("已经登录,直接放行");
			//继续执行过滤链
			filterChain.doFilter(arg0, arg1);
			return;
		}
		//执行到此处，表示当前页面不在白名单中，且未登录
		//拦截的表现是：重定向到登录页
		HttpServletResponse response=(HttpServletResponse) arg1;
		response.sendRedirect("login.html");
		//继续执行过滤器链
		filterChain.doFilter(arg0, arg1);
	}
	public void destroy() {

	}


}
